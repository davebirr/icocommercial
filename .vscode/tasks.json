{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Export Current Computer Apps",
			"type": "shell",
			"command": "powershell.exe",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"Export-InstalledApps.ps1"
			],
			"group": "build",
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": []
		},
		{
			"label": "Start App Comparison Workflow",
			"type": "shell",
			"command": "powershell.exe",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"Start-AppComparison.ps1"
			],
			"group": {
				"kind": "build",
				"isDefault": true
			},
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": []
		},
		{
			"label": "Show Usage Examples",
			"type": "shell",
			"command": "powershell.exe",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"Example-Usage.ps1"
			],
			"group": "test",
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": []
		},
		{
			"label": "Export Apps (Include System Components)",
			"type": "shell",
			"command": "powershell.exe",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"Export-InstalledApps.ps1",
				"-IncludeSystemComponents",
				"-IncludeUpdates"
			],
			"group": "build",
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": []
		},
		{
			"label": "Start Network App Comparison",
			"type": "shell",
			"command": "powershell.exe",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"Start-NetworkAppComparison.ps1"
			],
			"group": "build",
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": []
		},
		{
			"label": "Export from Remote Computers",
			"type": "shell",
			"command": "powershell.exe",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				"$computers = (Read-Host 'Enter computer names (comma-separated)').Split(',') | ForEach-Object { $_.Trim() }; .\\Export-RemoteInstalledApps.ps1 -ComputerNames $computers"
			],
			"group": "build",
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": []
		},
		{
			"label": "Generate Directory Summary",
			"type": "shell",
			"command": "powershell.exe",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				"$dir = Read-Host 'Enter directory path (or press Enter for current directory)'; if (-not $dir) { $dir = '.' }; .\\New-DirectorySummary.ps1 -DirectoryPath $dir"
			],
			"group": "test",
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": []
		},
		{
			"label": "Export Office Settings",
			"type": "shell",
			"command": "powershell.exe",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"Export-OfficeSettings.ps1",
				"-IncludeTemplates",
				"-IncludeSignatures"
			],
			"group": "build",
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": []
		},
		{
			"label": "Export Printer Settings",
			"type": "shell",
			"command": "powershell.exe",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"Export-PrinterSettings.ps1",
				"-IncludeDriverDetails"
			],
			"group": "build",
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": []
		},
		{
			"label": "Export WiFi Profiles",
			"type": "shell",
			"command": "powershell.exe",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"Export-WiFiProfiles.ps1",
				"-IncludePasswords",
				"-ExportProfiles"
			],
			"group": "build",
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": []
		},
		{
			"label": "Export Windows Personalization",
			"type": "shell",
			"command": "powershell.exe",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"Export-WindowsPersonalization.ps1",
				"-IncludeWallpaper",
				"-IncludeStartLayout"
			],
			"group": "build",
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": []
		},
		{
			"label": "Export Complete User Profile",
			"type": "shell",
			"command": "powershell.exe",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"Export-UserProfile.ps1",
				"-IncludeOfficeSettings",
				"-IncludePrinterSettings",
				"-IncludeWiFiProfiles",
				"-IncludePersonalization",
				"-GenerateReport"
			],
			"group": {
				"kind": "build",
				"isDefault": false
			},
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": []
		},
		{
			"label": "Directory Comparison Example",
			"type": "shell",
			"command": "powershell.exe",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"Example-DirectoryComparison.ps1"
			],
			"group": "test",
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": []
		},
		{
			"label": "Compare Directory Structures",
			"type": "shell",
			"command": "powershell.exe",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				"$source = Read-Host 'Enter source directory path'; $target = Read-Host 'Enter target directory path'; .\\Compare-DirectoryStructures.ps1 -SourceDirectory $source -TargetDirectory $target -GenerateStructureReport -GenerateCSVForActions"
			],
			"group": "build",
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": []
		},
		{
			"label": "Process Directory Actions (What-If)",
			"type": "shell",
			"command": "powershell.exe",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				"$csvPath = (Get-ChildItem -Path . -Filter 'DirectoryDifferences_Actions.csv' -Recurse | Sort-Object LastWriteTime -Descending | Select-Object -First 1).FullName; if ($csvPath) { .\\Process-DirectoryActions.ps1 -ActionCSVPath $csvPath -WhatIf } else { Write-Host 'No DirectoryDifferences_Actions.csv file found. Run directory comparison first.' -ForegroundColor Red }"
			],
			"group": "test",
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": []
		},
		{
			"label": "Process Directory Actions (Execute)",
			"type": "shell",
			"command": "powershell.exe",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				"$csvPath = (Get-ChildItem -Path . -Filter 'DirectoryDifferences_Actions.csv' -Recurse | Sort-Object LastWriteTime -Descending | Select-Object -First 1).FullName; if ($csvPath) { $backup = Read-Host 'Enter backup directory path (or press Enter to skip backup)'; if ($backup) { .\\Process-DirectoryActions.ps1 -ActionCSVPath $csvPath -BackupDirectory $backup } else { .\\Process-DirectoryActions.ps1 -ActionCSVPath $csvPath } } else { Write-Host 'No DirectoryDifferences_Actions.csv file found. Run directory comparison first.' -ForegroundColor Red }"
			],
			"group": "build",
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": []
		}
	]
}